import random
from urllib.parse import urlencode

import httplib2
import requests
from requests.adapters import HTTPAdapter
from urllib3 import Retry
from wordpress.wplogs import WPLogs


class HTTPRequest(object):

    _MAX_RETRIES = 1
    _DEFAULT_TYPE = "requests"
    _HEADER = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36"

    def __init__(self):
        self._is_proxy = True
        self._log = WPLogs()
        # self._proxies = Proxy()

    def request_content(self, url, method, parameters=None, timeout=20, proxy=False, max_retries=_MAX_RETRIES, headers=None):
        request = self.__get(url, method, parameters=parameters, timeout=timeout, proxies=proxy, max_retries=max_retries, headers=headers)
        if request is not None:
            return request.content
        return request

    def __get(self, url, method, parameters=None, timeout=20, proxies=None, max_retries=_MAX_RETRIES, headers=None):
        try:
            session = requests.Session()
            retries = Retry(total=max_retries, backoff_factor=1, status_forcelist=[502, 503, 504])
            session.mount('http://', HTTPAdapter(max_retries=retries))
            if headers is None:
                headers = {'User-Agent': self.__get_header() }
            request = session.request(method, url, headers=headers, timeout=timeout)
            return request
        except Exception as e:
            self._log.save_log(e)
            print(e)
            return None

    def request(self, url, method, parameters=None, timeout=20, proxies=None, headers=None, type=_DEFAULT_TYPE, max_retries = _MAX_RETRIES):
        if type is self._DEFAULT_TYPE:
            request = self.__get(url, method, parameters=parameters, timeout=timeout, proxies=proxies, max_retries=max_retries, headers=headers)
        else:
            if headers is not None:
                headers['User-Agent'] = self.__get_header()
            http = httplib2.Http(timeout=timeout, disable_ssl_certificate_validation=True)
            request = http.request(url, method, body=urlencode(parameters), headers=headers)
        return request



