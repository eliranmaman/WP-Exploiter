import requests
from bs4 import BeautifulSoup
from proxy import Proxy
import json
from xml.dom import minidom

from requests.adapters import HTTPAdapter
from urllib3 import Retry


class HTTPRequest:
    _MAX_RETRIES = 3

    def __init__(self,proxies=None):
        pass
        # self._proxies = Proxy()
        # self._currentProxy = None

    def request_content(self, url, method, parameters=None, timeout=20, proxy=False, max_retries=_MAX_RETRIES):
        request = self.__get(url, method, parameters=None, timeout=20, proxy=False, max_retries=3)
        if request is not None:
            return request.content
        return request

    def __get(self, url, method, parameters=None, timeout=20, proxy=False, max_retries=_MAX_RETRIES):
        try:
            session = requests.Session()
            retries = Retry(total=max_retries, backoff_factor=1, status_forcelist=[502, 503, 504])
            session.mount('http://', HTTPAdapter(max_retries=retries))
            headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}
            request = session.request(method, url, headers=headers, timeout=timeout)
            return request
        except:
            print("Time out ... ")
            return None


    def request(self, url, method, parameters=None, timeout=20, proxy=False):
        request = self.__get(url, method, parameters=None, timeout=20, proxy=False, max_retries=3)
        return request



