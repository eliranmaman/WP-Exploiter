import time
import pytest
import random

from wordpress import WPRegisterUser
from tests.test_data import protocols, params


reg = WPRegisterUser()
register_path = "wp-login.php?action=register"
login_path = "wp-login.php"
register_data = {
    "password": "123456",
    "email_server": "elro-sec.com",
    "email_user": "elro@elro-sec.com",
    "email_pass": "elroWordpress"
}


@pytest.mark.parametrize("url, result", params)
def test_register_with_data(url, result):
    for protocol in protocols:
        random.seed(time.time())
        user_rand = random.randrange(1, 1000000)
        data = register_data
        data['register_page'] = "{}{}/{}".format(protocol, url.strip('/'), register_path)
        data['login_page'] = "{}{}/{}".format(protocol, url.strip('/'), login_path)
        data['email'] = "elro{}@elro-sec.com".format(user_rand)
        data['username'] = "reg_test{}".format(user_rand)
        register_helper(data, result)


@pytest.mark.skip(reason="For later")
@pytest.mark.parametrize("url, result", params)
def test_register_missing_data(url, result):
    data = dict()
    for key, value in register_data:
        if key not in data:
            data[key] = value
        register_helper(data, False)
    for protocol in protocols:
        random.seed(time.time())
        user_rand = random.randrange(1, 1000000)
        data['register_page'] = "{}{}/{}".format(protocol, url.strip('/'), register_path)
        register_helper(data, False)
        data['login_page'] = "{}{}/{}".format(protocol, url.strip('/'), login_path)
        register_helper(data, False)
        data['email'] = "elro{}@elro-sec.com".format(user_rand)
        register_helper(data, False)
        data['username'] = "reg_test{}".format(user_rand)
        register_helper(data, result)


def register_helper(data, result):
    try_register = reg.register(data)
    assert type(try_register) is bool
    assert try_register is result
