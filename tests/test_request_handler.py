import pytest

from tests.test_data import protocols
from http_handler import HTTPHandler, HTTPWithSession


http = HTTPHandler()
http_session = HTTPWithSession()


@pytest.mark.parametrize("url, method",
                         [
                             ("elro-sec.com/dev1/", "GET"),
                             ("elro-sec.com/dev2/", "GET"),
                             ("elro-sec.com/dev3/", "GET"),
                             ("elro-sec.com/dev1/", "POST"),
                             ("elro-sec.com/dev2/", "POST"),
                             ("elro-sec.com/dev3/", "POST")
                          ])
def test_request(url, method):
    for protocol in protocols:
        target = "{}{}".format(protocol, url)
        request_handler(http, target, url, method)
        http_session.clean_session()
        request_handler(http_session, target, url, method)


@pytest.mark.parametrize("url, method, exception_str_1",
                         [
                             ("lllllllllllllllllllllllllllllllllllllllllllllllllllllllllll.com", "GET", "ConnectionError"),
                             ("fsklfhoashfsdlkhmsclfhsdmlkak.com", "GET", "ConnectionError"),
                             ("aacyencuigfcliusfsgnusdgnfsynfwncgckdsygnldcf.com", "GET", "ConnectionError"),
                             ("ftp://eliranm.co", "GET", "ConnectionError"),
                             ("lllllllllllllllllllllllllllllllllllllllllllllllllllllllllll.com", "POST", "ConnectionError"),
                             ("fsklfhoashfsdlkhmsclfhsdmlkak.com", "POST", "ConnectionError"),
                             ("aacyencuigfcliusfsgnusdgnfsynfwncgckdsygnldcf.com", "POST", "ConnectionError"),
                             ("ftp://eliranm.co", "POST", "ConnectionError"),
                             ("eliran url maman", "GET", "InvalidURL"),
                             ("אתר בעברית ?", "GET", "InvalidURL"),
                             ("ftp://adsadsas", "GET", "InvalidURL"),
                             ("eliran url maman", "POST", "InvalidURL"),
                             ("אתר בעברית ?", "POST", "InvalidURL"),
                             ("ftp://adsadsas", "POST", "InvalidURL")
                          ])
def test_bad_urls_request(url, method, exception_str_1):
    for protocol in protocols:
        target = "{}{}".format(protocol, url)
        bad_urls_request_helper(http, target, method, exception_str_1)
        bad_urls_request_helper(http_session, target, method, exception_str_1)


def bad_urls_request_helper(handler, target, method, exception_str_1):
    with pytest.raises(Exception) as e:
        handler.request(target, method)
    assert exception_str_1 or "MaxRetryError" in str(e)


def request_handler(handler, target, url, method):
    response = handler.request(target, method, redirect=True)
    assert response.status_code == 200
    assert url in response.url
    assert response.request.method == method
    assert url in response.request.url
